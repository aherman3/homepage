name: main-build-deploy
on:
  push:
    branches:
      - main
env:
  REPO: juzi-official-website
  ECR_URL: ${{ secrets.ECR_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repositories
        uses: actions/checkout@v2.3.4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1 #v1.5.11 #20ce4e5ba1de2e753d034b5415075a8767d64d4d #b8c74de753fbcb4868bf2011fb2e15826ce973af
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: cn-northwest-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16.7.0
          registry-url: https://npm.pkg.github.com/
          scope: '@juzibot'

      - name: Create env file
        id: create-env
        run: |
          touch .env
          echo JUZI_API_TOKEN="${{ secrets.JUZI_API_TOKEN }}" >> .env
          echo JUZI_HELLO_MSG="${{ secrets.JUZI_HELLO_MSG }}" >> .env
          echo JUZI_API_URL="${{ secrets.JUZI_API_URL }}" >> .env
          echo FEISHU_BOT_URL="${{ secrets.FEISHU_BOT_URL }}" >> .env
          cat .env

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          export PACKAGE_VERSION=${{ github.sha }}
          export ECR_URL=${{ env.ECR_URL }}
          npm run docker-ci
    outputs:
      version: ${{ github.sha }}

  deploy:
    needs: build
    runs-on: juzi-official
    steps:
      - name: deploy ${{env.REPO}}
        run: |
          export CI_VERSION=${{ needs.build.outputs.version }}
          echo $CI_VERSION
          mkdir -p ${{ secrets.DEPLOY_DIR }}
          cd ${{ secrets.DEPLOY_DIR }}
          cat <<EOF > docker-compose.yml
          version: "3"
          services:
            juzi-official-website:
              container_name: ${{ env.REPO }}
              image: ${{ env.ECR_URL }}/${{ env.REPO }}:$CI_VERSION
              network_mode: host
              restart: always
          EOF
          /usr/local/bin/aws ecr get-login-password | docker login --username AWS --password-stdin ${{ env.ECR_URL }} 2> /dev/null >&2
          docker-compose up -d
          docker ps
          docker system prune -af
          # TODO(hehai): hard code, has better.
          # sync to slave EC2 instances.
          [ -f /opt/juzi/website-syncer/sycner-to-homepage-2.sh ] && bash /opt/juzi/website-syncer/sycner-to-homepage-2.sh
